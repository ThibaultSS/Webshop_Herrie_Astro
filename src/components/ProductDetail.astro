---
const product = Astro.props.products;
---
<div>
   <h1>{product.name}</h1>
   <div class="product-detail">
    <div class="slider">
        <div class="slides" id="slides">
            {product.images?.map((image) => (
            <img src={`/images/${image.image}.png`} alt={product.name} />
            ))}  
        </div>
        <div class="buttons">
            <button onclick=prevSlide()>❮</button>
            <button onclick=nextSlide()>❯</button>
        </div>
    </div>
    <div>
        <p>{product.description}</p>
        <p>Price: <strong>€{product.price}</strong></p>
        <div class="frame">
        <div class="center container">
                <div class="button col col-1">
                    <button id="minus-btn">-</button>
                </div>
                <div class="number col col-2">
                    <h1 id="count">1</h1>
                </div>
                <div class="button col col-1">
                    <button id="plus-btn">+</button>
            </div>
            </div>
        </div>
        <div>
  <a 
    id="add-to-cart-link"
    data-product-id={product.id}
    href={`http://127.0.0.1:8000/api/order?product_id=${product.id}&amount=1&cart_number=0`}>
    <button type="button">Add to Cart</button>
  </a>
</div>
    </div>
 
   </div>

</div>
<script is:client>
    const slides = document.getElementById('slides');
    const totalSlides = slides.children.length;
    let currentIndex = 0;

    function showSlide(index) {

        if (index >= totalSlides) {
            currentIndex = 0;
        } else if (index < 0) {
            currentIndex = totalSlides - 1;
        } else {
            currentIndex = index;
        }
        slides.style.transform = `translateX(-${currentIndex * 100}%)`;
    }
    function nextSlide() {
        currentIndex++;
        showSlide(currentIndex);
    }
    function prevSlide() {
        currentIndex--;
        showSlide(currentIndex);
    }
    let minusBtn = document.getElementById("minus-btn");
let count = document.getElementById("count");
let plusBtn = document.getElementById("plus-btn");
let addToCartLink = document.getElementById("add-to-cart-link");

let countNum = 1;
count.innerHTML = countNum;

const productId = addToCartLink.dataset.productId;

function updateLink() {
  addToCartLink.href = `http://127.0.0.1:8000/api/order?product_id=${productId}&amount=${countNum}&cart_number=0`;
}

minusBtn.addEventListener("click", () => {
  if (countNum > 1) {
    countNum--;
    count.innerHTML = countNum;
    updateLink();
  }
});

plusBtn.addEventListener("click", () => {
  countNum++;
  count.innerHTML = countNum;
  updateLink();
});

</script>

<style>
    h1 {
        text-align: center;
        margin-bottom: 50px;
    }
    .product-detail {
        display: flex;
        flex-direction: row;
        justify-content: center;
        gap: 50px;
    }
    .product-detail p {
        max-width: 400px;

        font-size: 1.2rem;
        line-height: 1.6;
    }
    .product-detail strong {
        font-size: 1.5rem;
        color: #000;
    }
    .slider {
        position: relative;
        width: 400px;
        height: 400px;
        overflow: hidden;
        border-radius: 8px;
    }
    .slides {
        display: flex;
        transition: transform 0.5s ease-in-out;
    }
    .slides img {
        max-width: 100%;
        height: auto;
        object-fit: cover;
        border-radius: 8px;
        flex-shrink: 0;
        width: 100%;
        height: 100%;
    }
    .buttons {
        position: absolute;
        top: 50%;
        width: 100%;
        display: flex;
        justify-content: space-between;
        transform: translateY(-50%);
    }
    .buttons button {
        background-color: rgba(0, 0, 0, 0.5);
        border: none;
        color: white;
        padding: 10px;
        cursor: pointer;
        font-size: 1.5rem;
    }
    .buttons button:hover {
        background-color: rgba(0, 0, 0, 0.8);
    }
    .frame {
        border: 1px solid #ddd;
        border-radius: 8px;
        width: 150px;
        margin-top: 20px;
    }
    .container {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        padding: 10px;
    }
    .col {
        display: flex;
        justify-content: center;
        align-items: center;
    }
    .col-1 {
        flex: 1;
    }
    .col-2 {
        flex: 2;
    }
    .button button {
        background-color: #000000;
        color: white;
        border: none;

        border-radius: 4px;
        cursor: pointer;
        font-size: 1.5rem;
    }
    .button button:hover {
        background-color: #333333;
    }
    .number h1 {
        font-size: 1.5rem;
        margin: 0 20px;
    }
    a button {
        background-color: #000000;
        color: white;
        border: none;
        padding: 10px 27px;
        border-radius: 4px;
        cursor: pointer;
        font-size: 1.2rem;
    }
</style>
